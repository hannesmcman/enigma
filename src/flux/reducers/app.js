import { generateKeyPair } from "rsa-encryption-js";
import { Platform } from "react-native";

export const START_SESSION = "app/START_SESSION";

export function startSession(name) {
  return { type: START_SESSION, payload: name };
}

export const GENERATE_KEY = "app/GENERATE_KEY";

export function makeKey() {
  console.log("GENERATING KEY");
  let key;
  if (Platform.OS === "ios") {
    // key = generateKeyPair();
    key = {
      private: {
        d:
          "1821147720271912902033112463777089943123679001658719686210597919558010776750298852698372767336133540195331543832136732759423559830530954134098770893943732474359049374533463007906476803231454940204265375798470633889215966373235607139099746514212082417270706668789176044710285714240081857368924309790248384752109989521158063240392196662295736918072030345016241676854376981861573460860525303513682764280685339408533683448678098451766653267870898528893214775430293052328174493990796942888636823191688783417122731073707717746694787639291872832977374802624869154205129759465193981193273563391617850309073465545736404836943",
        n:
          "13629199087359435102025049932655951720437216168767369725295974892098194747584337384184562147096919708905237035247207410817128808463080131844504957906562300926428696103888524545135280971723722845585437889389459974841298119607003816301490828576327911697497706352538131860110722607566733948567796358870938258842320224256117448834867894262097394005497476398569052097063700513292274483123708057502172210298988813234884152301925789181816834911957311386865392679229949406015434454793899536734364841254318079434312221756864117433488524524902610672587615734006868570776812856366307883080278002833444133436790449680020341693889"
      },
      public: {
        e: "12397",
        n:
          "13629199087359435102025049932655951720437216168767369725295974892098194747584337384184562147096919708905237035247207410817128808463080131844504957906562300926428696103888524545135280971723722845585437889389459974841298119607003816301490828576327911697497706352538131860110722607566733948567796358870938258842320224256117448834867894262097394005497476398569052097063700513292274483123708057502172210298988813234884152301925789181816834911957311386865392679229949406015434454793899536734364841254318079434312221756864117433488524524902610672587615734006868570776812856366307883080278002833444133436790449680020341693889"
      }
    };
  } else {
    key = {
      private: {
        d:
          "1950128716822590564270155250023028861525605955834878341502754278017836902515089454297986980172847726607878080944961271195634925717226659854206503672973128225360333102473791723476220538165165037706014764144467996328896641547665808738351310952594447397990936535738598656135963915481958906836777440247214447504751313700206005142478609772123923844745782163573252779544020773909477345306335305977181118388597755755080218699805559058227418047250510114615457638366051459412323215758271967785653306300722168476670998389213614826050400330680452565402804264352945650674516021684411792137738087122761646580050537969627611996549",
        n:
          "17521339969494712776225431573601403043309572777501139349648599598826926053790008613845522164366442265363748629407633684320414103233063995876632133918027678061494368975743119521630385141068057739389209104148155881389291537819700752517664072106184973869410922146788999546567162029620780636961627276594238675134697916741589412141954359156560852040564573304875980651957820854129569255003322505439920733473444407950493813532585033607213282978471405136055239108306817339969772940199301585277032220226555699616675589970101209732324333651038068169967927665275331470010607158710846631111861371133050449742049208852188442365069"
      },
      public: {
        e: "1469",
        n:
          "17521339969494712776225431573601403043309572777501139349648599598826926053790008613845522164366442265363748629407633684320414103233063995876632133918027678061494368975743119521630385141068057739389209104148155881389291537819700752517664072106184973869410922146788999546567162029620780636961627276594238675134697916741589412141954359156560852040564573304875980651957820854129569255003322505439920733473444407950493813532585033607213282978471405136055239108306817339969772940199301585277032220226555699616675589970101209732324333651038068169967927665275331470010607158710846631111861371133050449742049208852188442365069"
      }
    };
  }
  console.log("key: " + JSON.stringify(key));
  return { type: GENERATE_KEY, payload: key };
}

const initialState = {
  name: "",
  RSAkey: null
};

export function app(state = initialState, action: Action) {
  switch (action.type) {
    case START_SESSION:
      return { ...state, name: action.payload };

    case GENERATE_KEY:
      return { ...state, RSAkey: action.payload };

    default:
      return state;
  }
}
